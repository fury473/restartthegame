{% extends 'RTGAppBundle::layout.html.twig' %}

{% block title %}{{ 'my_stream'|trans({}, 'menu') }}{% endblock %}

{% block content %}
    <h1>{% if app.user != null and app.user.id == user.id %}{{ 'my_stream'|trans({}, 'menu') }}{% else %}Stream - {{ user.username }}{% endif %}</h1>
    <ul class="nav nav-pills list-unstyled hidden" role="tablist">
        {% if dailymotion is defined %}
            <li role="presentation"><a href="#dailymotion" aria-controls="dailymotion" role="tab" data-toggle="tab">Dailymotion</a></li>
            {% endif %}
            {% if twitch is defined %}
            <li role="presentation"><a href="#twitch" aria-controls="twitch" role="tab" data-toggle="tab">Twitch</a></li>
            {% endif %}
    </ul>
    <div class="tab-content">
        {% if dailymotion is defined %}
            <div role="tabpanel" class="tab-pane fade" id="dailymotion">
                {{ render(controller("RTGAppBundle:Stream:dailymotion", { 'username': user.usernameCanonical })) }}
            </div>
        {% endif %}
        {% if twitch is defined %}
            <div role="tabpanel" class="tab-pane fade" id="twitch">
                {{ render(controller("RTGAppBundle:Stream:twitch", { 'username': user.usernameCanonical })) }}
            </div>
        {% endif %}
    </div>
    <div class="col-md-{% if app.user != null and app.user.id == user.id %}7{% else %}12{% endif %}">
        <h2>Planning</h2>
        <div id="loader" class="loader"></div>
        <div id="calendar" data-event-url="{{ path('rtg_app_rest_session_list') }}" data-user-events-url="{{ path('rtg_app_rest_user_sessions', {'id': user.id}) }}" data-editable="{% if app.user != null and app.user.id == user.id %}true{% else %}false{% endif %}"></div>
    </div>
    {% if app.user != null and app.user.id == user.id %}
    <div class='col-sm-5'>
        <h2>Plannifier un stream</h2>
        <form id="session-form" class="form" action="{{ path('rtg_app_rest_session_create') }}" method="POST">
            <div class="row">
                <div class='col-sm-12'>
                    <div class="form-group">
                        <label class="label" for="session-title">Titre</label>
                        <input id="session-title" type="text" name="session[title]" placeholder="Titre" class="form-control" required/>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class='col-sm-6'>
                    <div class="form-group">
                        <label class="label">Début du stream</label>
                        <div class='input-group date' id='session-startAt-picker'>
                            <input type='text' class="form-control" placeholder="{{ 'now'|date('d/m/Y H:i') }}" name="session[startAt]" required />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
                <div class='col-sm-6'>
                    <div class="form-group">
                        <label class="label">Fin du stream</label>
                        <div class='input-group date' id='session-endAt-picker'>
                            <input type='text' class="form-control" placeholder="{{ '+2 hours +30minutes'|date('d/m/Y H:i') }}" name="session[endAt]" required />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class='col-sm-12'>
                    <div class="form-group">
                        <input type="submit" class="btn btn-primary form-control" data-loading-text="Chargement..." value="Valider"/>
                    </div>
                </div>
            </div>
            <input id="session-user" type="hidden" name="session[user_id]" value="{{ user.id }}" required/>
        </form>
    </div>
    {% endif %}
{% endblock %}

{% block javascript %}
    {{ parent() }}
    <script type="text/javascript">
        function updateSession(url, data, revertFunc) {
            $.ajax({
                url: url,
                data: data,
                type: 'PUT',
                error: function() {
                    alert('Une erreur est survenue, annulation de la modification.')
                    revertFunc();
                }
            });
        }
        $(function () {
            $('#calendar').fullCalendar({
                lang: $('html').attr('lang'),
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay'
                },
                editable: $('#calendar').data('editable'),
                events: {
                    url: $('#calendar').data('user-events-url'),
                    error: function () {
                    }
                },
                eventAfterRender: function(event, element, view) {
                    if (view.options.editable) {
                        element.prepend( '<span class="closeon" aria-hidden="true">×</span>' );
                        element.find(".closeon").click(function() {
                            var url = $('#calendar').data('event-url') + '/' + event._id;
                            $.ajax({
                                url: url,
                                type: 'DELETE',
                                success: function(result) {
                                    $('#calendar').fullCalendar('removeEvents',event._id);
                                }
                            });
                        });
                    }
                },
                eventDrop: function( event, delta, revertFunc, jsEvent, ui, view ) {
                    if (view.options.editable) {
                        var url = $('#calendar').data('event-url')+'/'+event._id;
                        updateSession(url, {'move_delta': delta._data}, revertFunc);
                    }
                },
                eventResize: function( event, delta, revertFunc, jsEvent, ui, view ) {
                    if (view.options.editable) {
                        var url = $('#calendar').data('event-url')+'/'+event._id;
                        updateSession(url, {'resize_delta': delta._data}, revertFunc);
                    }
                },
                loading: function (bool) {
                    var loader = $('#loader');
                    loader.toggle(bool);
                }
            });
            $('[data-toggle="tab"]:first').tab('show');
            $('#session-startAt-picker, #session-endAt-picker').datetimepicker({
                format: 'DD/MM/YYYY HH:mm'
            });
            $("#session-startAt-picker").on("dp.change", function (e) {
                $('#session-endAt-picker').data("DateTimePicker").minDate(e.date.add(1, 'm'));
            });
            $("#session-endAt-picker").on("dp.change", function (e) {
                $('#session-startAt-picker').data("DateTimePicker").maxDate(e.date.subtract(1, 'm'));
            });
            $('#session-form').submit(function (e) {
                e.preventDefault();
                var form = $(this);
                var post_data = form.serialize();
                var action = form.attr('action');
                var submit = form.find('[type="submit"]');
                submit.button('loading');
                $.post(action, post_data, function (data) {
                    $('#calendar').fullCalendar('renderEvent', data);
                    $('#session-form').find("input[type=text]").val("");
                    submit.button('reset');
                }, "json")
                .fail(function() {
                    submit.button('reset');
                });
            });
        });
    </script>
{% endblock %}
